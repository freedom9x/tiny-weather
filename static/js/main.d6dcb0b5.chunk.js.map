{"version":3,"sources":["services/logService.js","services/metaWeather.js","services/weatherService.js","components/icons/search.svg","components/weather/WeatherTile.js","container/weather/WeatherContainer.js","App.js","serviceWorker.js","index.js"],"names":["LogService","logError","error","console","log","setConfig","setup","MetaWeather","baseUrl","endPoints","this","normalizeData","bind","name","endPoint","searchCity","fetch","response","status","json","statusText","logService","errorMessage","id","find5days","applicableDate","parts","split","Date","parseInt","getDay","weathers","map","weather","minTemp","parseFloat","min_temp","maxTemp","max_temp","dayName","getDayName","applicable_date","iconUrl","icon","weather_state_abbr","WEATHER_PROVIDER","config","WeatherService","service","serviceName","getService","provider","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","createElement","d","_ref","svgRef","title","props","fill","viewBox","width","height","ref","ForwardRef","forwardRef","Weather","styled","div","DayName","TemperatureTree","DayInfo","Temperature","Tree","isCool","css","WeatherStatusIcon","iconPath","SkeletonWeather","WeatherTile","statusIcon","min","max","isFetching","unit","toFixed","String","fromCharCode","searchDelay","SearchInput","input","SearchContainer","StyledSearchIcon","SearchIcon","SuggestionCities","SuggestCity","span","SkeletonSuggestCity","WeatherList","SuggestionLabel","SuggestCityList","WeatherLabel","ErrorMessage","Notification","weatherConfig","setQ","value","searchParams","URLSearchParams","window","location","search","set","newRelativePathQuery","pathname","toString","history","pushState","WeatherContainer","state","suggestCities","searchTerm","city","q","get","getQ","setState","clearTimeout","trim","setTimeout","a","weatherService","cites","notification","getForecast","woeid","data","consolidated_weather","n","slice","onClick","Array","_","disabled","onChange","e","placeholder","renderSuggestCities","renderForecastWeathers","React","Component","AppContainer","App","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.d6dcb0b5.chunk.js","sourcesContent":["//  - Description:\n//  Log service for capture information and exceptions\n//  for tracking and debug\n\n/* eslint-disable no-console */\n/* eslint-disable no-unused-vars */\n// eslint-disable-next-line func-names\nconst LogService = (function () {\n  let config = null\n\n  function setConfig(setup) {\n    config = setup\n  }\n\n  function logError(error) {\n    console.log(error)\n  }\n\n  return {\n    logError,\n    setConfig,\n  }\n}())\n\nexport default LogService\n","// That service is build for communication for MetaWeather api provider\r\n// MetaWeather provides an API that delivers JSON over HTTPS for access to our data.\r\n// https://www.metaweather.com/api/\r\nimport logService from 'services/logService'\r\n\r\nclass MetaWeather {\r\n  constructor({ baseUrl, endPoints }) {\r\n    this.baseUrl = baseUrl\r\n    this.endPoints = endPoints\r\n    this.normalizeData = this.normalizeData.bind(this)\r\n  }\r\n\r\n  async searchCity(name) {\r\n    const endPoint = `${this.baseUrl}${this.endPoints.searchCity}${name}`\r\n    const response = await fetch(endPoint)\r\n    if (response.status === 200) {\r\n      return response.json()\r\n    }\r\n    const error = `${response.status} : ${response.statusText}`\r\n    logService.logError(error)\r\n    return { errorMessage: error }\r\n  }\r\n\r\n  async find5days(id) {\r\n    const endPoint = `${this.baseUrl}${this.endPoints.find5days}${id}`\r\n    const response = await fetch(endPoint)\r\n\r\n    if (response.status === 200) {\r\n      return response.json()\r\n    }\r\n\r\n    const error = `${response.status} : ${response.statusText}`\r\n    logService.logError(error)\r\n    return { errorMessage: error }\r\n  }\r\n\r\n  // get name of day base on yyyy-mm-dd\r\n  getDayName(applicableDate) {\r\n    const dayNames = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday']\r\n    const parts = applicableDate.split('-')\r\n    const date = new Date(parts[0], parseInt(parts[1], 10) - 1, parts[2])\r\n    return dayNames[date.getDay()]\r\n  }\r\n\r\n  // normalize specific response data\r\n  normalizeData(weathers) {\r\n    const result = weathers.map((weather) => ({\r\n      minTemp: parseFloat(weather.min_temp),\r\n      maxTemp: parseFloat(weather.max_temp),\r\n      dayName: this.getDayName(weather.applicable_date),\r\n      iconUrl: `${this.baseUrl}${this.endPoints.icon}${weather.weather_state_abbr}.svg`,\r\n      id: weather.id,\r\n    }))\r\n    return result\r\n  }\r\n}\r\n\r\nexport default MetaWeather\r\n","// - This is out Service for get weather information\n// - Build by adapter pattern which allow change to any weather provider\n// but don't need to  change apis.\n// - Build by singleton  pattern, so in everywhere, every time you only have 1 instance\nimport MetaWeather from './metaWeather'\n\nexport const WEATHER_PROVIDER = {\n  MetaWeather: {\n    name: 'MetaWeather',\n    config: {\n      baseUrl: 'https://meta-weather.now.sh/', //\n      endPoints: {\n        searchCity: 'api/location/search/?query=',\n        find5days: 'api/location/',\n        icon: 'static/img/weather/',\n      },\n    },\n  },\n}\n\n// eslint-disable-next-line func-names\nconst WeatherService = (function () {\n  let service = null\n  let serviceName = null\n\n\n  function getService(provider) {\n    if (service && serviceName === provider) {\n      return service\n    }\n    switch (provider) {\n      case WEATHER_PROVIDER.MetaWeather.name:\n        serviceName = provider\n        service = new MetaWeather(WEATHER_PROVIDER.MetaWeather.config)\n        return service\n      default:\n        serviceName = WEATHER_PROVIDER.MetaWeather.name\n        service = new MetaWeather(WEATHER_PROVIDER.MetaWeather.config)\n        return service\n    }\n  }\n\n  function searchCity(name, provider) {\n    const instance = getService(provider)\n    return instance.searchCity(name)\n  }\n\n  function find5days(id, provider) {\n    const instance = getService(provider)\n    return instance.find5days(id)\n  }\n\n  function normalizeData(weathers, provider) {\n    const instance = getService(provider)\n    return instance.normalizeData(weathers)\n  }\n\n  return {\n    searchCity,\n    find5days,\n    normalizeData,\n  }\n}())\n\nexport default WeatherService\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M 52.349609 14.400391 C 42.624609 14.400391 32.9 18.1 25.5 25.5 C 10.7 40.3 10.7 64.399219 25.5 79.199219 C 32.9 86.599219 42.600391 90.300781 52.400391 90.300781 C 62.200391 90.300781 71.900781 86.599219 79.300781 79.199219 C 94.000781 64.399219 93.999219 40.3 79.199219 25.5 C 71.799219 18.1 62.074609 14.400391 52.349609 14.400391 z M 52.300781 20.300781 C 60.500781 20.300781 68.700391 23.399219 74.900391 29.699219 C 87.400391 42.199219 87.4 62.5 75 75 C 62.5 87.5 42.199219 87.5 29.699219 75 C 17.199219 62.5 17.199219 42.199219 29.699219 29.699219 C 35.899219 23.499219 44.100781 20.300781 52.300781 20.300781 z M 52.300781 26.300781 C 45.400781 26.300781 38.9 29 34 34 C 29.3 38.7 26.700391 44.800391 26.400391 51.400391 C 26.300391 53.100391 27.600781 54.4 29.300781 54.5 L 29.400391 54.5 C 31.000391 54.5 32.300391 53.199609 32.400391 51.599609 C 32.600391 46.499609 34.699219 41.799219 38.199219 38.199219 C 41.999219 34.399219 47.000781 32.300781 52.300781 32.300781 C 54.000781 32.300781 55.300781 31.000781 55.300781 29.300781 C 55.300781 27.600781 54.000781 26.300781 52.300781 26.300781 z M 35 64 A 3 3 0 0 0 32 67 A 3 3 0 0 0 35 70 A 3 3 0 0 0 38 67 A 3 3 0 0 0 35 64 z M 83.363281 80.5 C 82.600781 80.5 81.850781 80.800391 81.300781 81.400391 C 80.100781 82.600391 80.100781 84.499609 81.300781 85.599609 L 83.800781 88.099609 C 83.200781 89.299609 82.900391 90.6 82.900391 92 C 82.900391 94.4 83.8 96.700391 85.5 98.400391 L 98.300781 111 C 100.10078 112.8 102.39922 113.69922 104.69922 113.69922 C 106.99922 113.69922 109.29961 112.79961 111.09961 111.09961 C 114.59961 107.59961 114.59961 101.90039 111.09961 98.400391 L 98.300781 85.599609 C 96.600781 83.899609 94.300391 83 91.900391 83 C 90.500391 83 89.2 83.300391 88 83.900391 L 85.5 81.400391 C 84.9 80.800391 84.125781 80.5 83.363281 80.5 z M 91.900391 88.900391 C 92.700391 88.900391 93.5 89.200781 94 89.800781 L 106.69922 102.5 C 107.89922 103.7 107.89922 105.59922 106.69922 106.69922 C 105.49922 107.89922 103.6 107.89922 102.5 106.69922 L 89.800781 94.099609 C 89.200781 93.499609 88.900391 92.700391 88.900391 91.900391 C 88.900391 91.100391 89.200781 90.300781 89.800781 89.800781 C 90.400781 89.200781 91.100391 88.900391 91.900391 88.900391 z\"\n});\n\nvar SvgSearch = function SvgSearch(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    fill: \"#000000\",\n    viewBox: \"0 0 128 128\",\n    width: \"64px\",\n    height: \"64px\",\n    ref: svgRef\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _ref2);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgSearch, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/search.33f0a46d.svg\";\nexport { ForwardRef as ReactComponent };","import React from 'react'\nimport styled, { css } from 'styled-components'\nimport PropTypes from 'prop-types'\n\nconst propTypes = {\n  statusIcon: PropTypes.string,\n  dayName: PropTypes.string,\n  min: PropTypes.number,\n  max: PropTypes.number,\n  isFetching: PropTypes.bool,\n  unit: PropTypes.string,\n}\n\nconst Weather = styled.div`\n    display: flex;\n    padding: 5px;\n    height: 160px;\n    width: 160px;\n    background: lightblue;\n    margin: 5px;\n    color: grey;\n    border-radius: 5px;\n    font-weight: 600;\n    \n`\n\nconst DayName = styled.div`\n  text-align: center;\n  font-size: 16px;\n`\n\nconst TemperatureTree = styled.div`\n    padding: 10px;\n    flex-direction: column;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n`\n\nconst DayInfo = styled.div`\n    flex-direction: column;\n    padding: 10px;\n    flex: 1;\n    display: flex;\n`\n\nconst Temperature = styled.div`\n\n`\nconst Tree = styled.div`\n  width: 6px;\n  border-radius: 20px;\n  background: linear-gradient(to top, #95ca3d, #bf2b1c);\n  height: 100%;\n  ${({ isCool }) => (isCool ? css` background: linear-gradient(to top,#2da3e4,#c8d018);` : '')\n}\n`\nconst WeatherStatusIcon = styled.div`\n  background: url(${(props) => props.iconPath}) center no-repeat;\n  flex: 1;\n`\n\nconst SkeletonWeather = styled(Weather)`\n  background: linear-gradient(to right,#ffffff, #b7b7b7);\n  background-size: 400% 400%;\n  animation: gradient 0.5s ease infinite;\n`\n\nconst WeatherTile = ({\n  statusIcon, dayName, min, max, isFetching, unit,\n}) => {\n  if (isFetching) {\n    return (<SkeletonWeather />)\n  }\n  return (\n    <Weather>\n      <DayInfo>\n        <DayName> {dayName} </DayName>\n        <WeatherStatusIcon iconPath={statusIcon}/>\n      </DayInfo>\n      <TemperatureTree>\n        <Temperature> {`${max.toFixed(0)}${String.fromCharCode('0176')}${unit}`}</Temperature>\n        <Tree isCool={max < 30}/>\n        <Temperature>{`${min.toFixed(0)}${String.fromCharCode('0176')}${unit}`}</Temperature>\n      </TemperatureTree>\n    </Weather>\n  )\n}\n\nWeatherTile.propTypes = propTypes\nexport default WeatherTile\n","import React from 'react'\nimport weatherService, { WEATHER_PROVIDER } from 'services/weatherService'\nimport styled from 'styled-components'\n\nimport { ReactComponent as SearchIcon } from 'components/icons/search.svg'\nimport WeatherTile from 'components/weather/WeatherTile'\n\nconst SearchInput = styled.input`\n    background-color: #2c313b;\n    border-style: none;\n    padding: 10px 30px 10px 20px;\n    border-radius: 5px;\n    font-weight: 700;\n    color: #d6cfcf;\n    width: 100%;\n    border-radius: 7px;\n  &:focus {\n    outline: none;\n  }\n  &::placeholder  {\n    color: #8a8080;\n  }\n`\nconst SearchContainer = styled.div`\n    width: 290px;\n    position: relative;\n    padding: 20px 0;\n    margin: 0 auto;\n`\n\nconst StyledSearchIcon = styled(SearchIcon)`\n    width: 24px;\n    height: 24px;\n    top: 25px;\n    right: 5px;\n    position: absolute;\n`\n\nconst SuggestionCities = styled.div`\n  padding-top: 32px;\n`\n\nconst SuggestCity = styled.span`\n    display: inline-block;\n    padding: 7px;\n    font-style: italic;\n    text-decoration: underline;\n    color: cadetblue;\n    font-size: 15px;\n    cursor: pointer;\n`\n\nconst SkeletonSuggestCity = styled(SuggestCity)`\n  width: 60px;\n  height: 20px; \n  margin: 5px;\n  margin-top: 20px;\n  background: linear-gradient(to right,#ffffff, #b7b7b7);\n  background-size: 400% 400%;\n  animation: gradient 0.5s ease infinite;\n`\n\nconst WeatherList = styled.div`\n  display: flex;\n  justify-content: center;\n`\n\nconst SuggestionLabel = styled.div`\n  text-align: center;\n`\n\nconst SuggestCityList = styled.div`\n  display: flex;\n  justify-content: center;\n`\n\nconst WeatherLabel = styled.div`\n  text-align: center;\n  font-size: 16px;\n  font-weight: 600;\n  padding: 15px 0;\n`\nconst ErrorMessage = styled.div`\n  text-align: center;\n  color: red;\n`\n\nconst Notification = styled.div`\n  text-align: center;\n`\n\n\nlet searchDelay\nconst weatherConfig = WEATHER_PROVIDER.MetaWeather\nfunction getQ() {\n  const { search } = window.location\n  const params = new URLSearchParams(search)\n  const q = params.get('q')\n  return q\n}\n\nfunction setQ(value) {\n  const searchParams = new URLSearchParams(window.location.search)\n  searchParams.set('q', value)\n  const newRelativePathQuery = `${window.location.pathname}?${searchParams.toString()}`\n  // eslint-disable-next-line no-restricted-globals\n  history.pushState(null, '', newRelativePathQuery)\n}\n\nclass WeatherContainer extends React.Component {\n  constructor() {\n    super()\n    this.state = {\n      suggestCities: [],\n      weathers: [],\n      searchTerm: '',\n      isFetching: false,\n      city: '',\n    }\n  }\n\n  componentDidMount() {\n    const q = getQ()\n    if (q && q.length > 0) {\n      this.setState({ searchTerm: q })\n      this.searchCity(q)\n    }\n  }\n\n  searchCity(q) {\n    const debounceSearchTime = 500\n    this.setState({ searchTerm: q })\n    clearTimeout(searchDelay)\n    if (q && q.trim().length > 0) {\n      searchDelay = setTimeout(async () => {\n        setQ(q)\n        this.setState({ isFetching: true })\n        const cites = await weatherService.searchCity(q.trim(), weatherConfig.name)\n        if (cites.errorMessage) {\n          this.setState({ error: cites.errorMessage, isFetching: false })\n        } else {\n          this.setState({\n            suggestCities: cites,\n            error: '',\n            notification: cites.length === 0 ? 'Could not found city with you input. Please try again' : '',\n            weathers: [],\n          })\n          if (cites.length === 1) {\n            this.getForecast(cites[0].woeid, cites[0].title)\n          } else {\n            this.setState({ isFetching: false })\n          }\n        }\n      }, debounceSearchTime)\n    }\n  }\n\n  async getForecast(woeid, city) {\n    this.setState({ isFetching: true })\n    const data = await weatherService.find5days(woeid, weatherConfig.name)\n    if (data.errorMessage) {\n      this.setState({ error: data.errorMessage, isFetching: false })\n    } else {\n      this.setState({\n        weathers: weatherService.normalizeData(data.consolidated_weather, weatherConfig.name),\n        isFetching: false,\n        city,\n        error: '',\n      })\n    }\n  }\n\n  renderSuggestCities(n) {\n    const { suggestCities, isFetching } = this.state\n    if (suggestCities.length > 1 && !isFetching) {\n      return (\n        <SuggestionCities>\n          <SuggestionLabel>\n            Are you looking for:\n          </SuggestionLabel>\n          <SuggestCityList>\n            {suggestCities.slice(0, n).map(\n              (city) => <SuggestCity\n                  key={city.woeid}\n                  onClick={this.getForecast.bind(this, city.woeid, city.title)}\n                >\n                {city.title}\n              </SuggestCity>,\n            )}\n          </SuggestCityList>\n        </SuggestionCities>\n      )\n    }\n    if (isFetching) {\n      return (\n        <SuggestionCities>\n          <SuggestCityList>\n            {\n              [...Array(5)].map((_, i) => <SkeletonSuggestCity key={i}/>)\n            }\n          </SuggestCityList>\n        </SuggestionCities>\n      )\n    }\n    return null\n  }\n\n  renderForecastWeathers(n) {\n    const { weathers, isFetching, city } = this.state\n    if (isFetching) {\n      return (\n        <WeatherList>\n          { [...Array(n)].map((_, i) => <WeatherTile key={i} isFetching/>)}\n        </WeatherList>\n      )\n    }\n    if (weathers.length > 0) {\n      return (\n        <div>\n          <WeatherLabel> {`In ${city}, the next days forecast weather are: `}</WeatherLabel>\n          <WeatherList>\n            { weathers.slice(0, n).map((weather) => <WeatherTile\n            key={weather.id}\n            statusIcon={weather.iconUrl}\n            dayName={weather.dayName}\n            min={weather.minTemp}\n            max={weather.maxTemp}\n            unit='C'\n          />)}\n          </WeatherList>\n        </div>\n\n\n      )\n    }\n\n    return null\n  }\n\n  render() {\n    const {\n      isFetching, error, notification, searchTerm,\n    } = this.state\n    return (\n      <div>\n        <SearchContainer>\n          <SearchInput\n            disabled={isFetching}\n            onChange={(e) => this.searchCity(e.target.value)}\n            placeholder=\"Search city...\"\n            value={searchTerm}\n          />\n          <ErrorMessage>\n            {error}\n          </ErrorMessage>\n          <Notification>\n            {notification}\n          </Notification>\n          <StyledSearchIcon />\n        </SearchContainer>\n        {this.renderSuggestCities(10)}\n        {this.renderForecastWeathers(6)}\n      </div>\n    )\n  }\n}\nexport default WeatherContainer\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport WeatherContainer from './container/weather/WeatherContainer'\n\n\nconst AppContainer = styled.div`\n  background-color:  #353d45;\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  right: 0;\n  left: 0;\n  font-size: 14px;\n  padding: 50px;\n  color: #eae3e3;\n`\nfunction App() {\n  return (\n    <AppContainer>\n      <WeatherContainer />\n    </AppContainer>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}